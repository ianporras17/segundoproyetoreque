version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: proj_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./backend/src/db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [appnet]

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: proj_api
    env_file:
      - ./backend/.env
    ports:
      - "${API_PORT}:3000"
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks: [appnet]

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: proj_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on: [db]
    networks: [appnet]
    restart: unless-stopped

volumes:
  db-data:

networks:
  appnet:
    driver: bridge
